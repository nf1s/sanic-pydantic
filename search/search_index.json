{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started A library for parsing and validating http requests for sanic web-framework using pydantic library Full code on github here Requirements python >= 3.8 How to install pip install sanic-pydantic Dependencies pydantic Example from sanic_pydantic import webargs from sanic import Sanic from sanic.response import json from pydantic import BaseModel app = Sanic ( \"new app\" ) class BodyModel ( BaseModel ): age : int class QueryModel ( BaseModel ): name : str @app . route ( \"/post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) def example_post_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return response if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 )","title":"Getting Started"},{"location":"#getting-started","text":"A library for parsing and validating http requests for sanic web-framework using pydantic library Full code on github here","title":"Getting Started"},{"location":"#requirements","text":"python >= 3.8","title":"Requirements"},{"location":"#how-to-install","text":"pip install sanic-pydantic","title":"How to install"},{"location":"#dependencies","text":"pydantic","title":"Dependencies"},{"location":"#example","text":"from sanic_pydantic import webargs from sanic import Sanic from sanic.response import json from pydantic import BaseModel app = Sanic ( \"new app\" ) class BodyModel ( BaseModel ): age : int class QueryModel ( BaseModel ): name : str @app . route ( \"/post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) def example_post_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return response if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 )","title":"Example"},{"location":"example/","text":"Examples Sync webargs from sanic_pydantic import webargs from sanic import Sanic from sanic.response import json from pydantic import BaseModel app = Sanic ( \"new app\" ) class PathModel ( BaseModel ): id : int class QueryModel ( BaseModel ): name : str class BodyModel ( BaseModel ): age : int class HeadersModel ( BaseModel ): api_key : str = Field ( alias = \"x-api-key\" ) @app . route ( \"/get/<id:int>\" , methods = [ \"GET\" ]) @webargs ( path = PathModel , headers = HeadersModel ) def example_get_endpoint_params ( request , id , ** kwargs ): response = json ({ \"id\" : id }) return response @app . route ( \"/get-request\" , methods = [ \"GET\" ]) @webargs ( query = QueryModel ) def example_get_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return response @app . route ( \"/post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) def example_post_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return response Async webargs @app . route ( \"/async-get-request\" , methods = [ \"GET\" ]) @webargs ( query = QueryModel ) async def async_example_get_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return response @app . route ( \"/async-post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) async def async_example_post_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return responsen if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 )","title":"Example"},{"location":"example/#examples","text":"","title":"Examples"},{"location":"example/#sync-webargs","text":"from sanic_pydantic import webargs from sanic import Sanic from sanic.response import json from pydantic import BaseModel app = Sanic ( \"new app\" ) class PathModel ( BaseModel ): id : int class QueryModel ( BaseModel ): name : str class BodyModel ( BaseModel ): age : int class HeadersModel ( BaseModel ): api_key : str = Field ( alias = \"x-api-key\" ) @app . route ( \"/get/<id:int>\" , methods = [ \"GET\" ]) @webargs ( path = PathModel , headers = HeadersModel ) def example_get_endpoint_params ( request , id , ** kwargs ): response = json ({ \"id\" : id }) return response @app . route ( \"/get-request\" , methods = [ \"GET\" ]) @webargs ( query = QueryModel ) def example_get_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return response @app . route ( \"/post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) def example_post_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return response","title":"Sync webargs"},{"location":"example/#async-webargs","text":"@app . route ( \"/async-get-request\" , methods = [ \"GET\" ]) @webargs ( query = QueryModel ) async def async_example_get_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return response @app . route ( \"/async-post-request\" , methods = [ \"POST\" ]) @webargs ( query = QueryModel , body = BodyModel ) async def async_example_post_endpoint ( request , ** kwargs ): print ( kwargs ) response = json ( kwargs ) return responsen if __name__ == \"__main__\" : app . run ( host = \"0.0.0.0\" , port = 8000 )","title":"Async webargs"},{"location":"install/","text":"Install Using pip pip install sanic-pydantic","title":"Install"},{"location":"install/#install","text":"","title":"Install"},{"location":"install/#using-pip","text":"pip install sanic-pydantic","title":"Using pip"}]}